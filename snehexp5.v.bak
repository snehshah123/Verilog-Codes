// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// PROGRAM		"Quartus II 64-Bit"
// VERSION		"Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"
// CREATED		"Wed Mar 13 22:31:06 2024"

module snehexp5(
	Mode,
	CLK,
	HIGH,
	Q3,
	Q2,
	Q1,
	Q0
);


input wire	Mode;
input wire	CLK;
input wire	HIGH;
output reg	Q3;
output wire	Q2;
output wire	Q1;
output wire	Q0;

wire	SYNTHESIZED_WIRE_0;
wire	SYNTHESIZED_WIRE_1;
wire	SYNTHESIZED_WIRE_2;
reg	JKFF_A;
reg	JKFF_2;
reg	JKFF_3;

assign	Q2 = JKFF_3;
assign	Q1 = JKFF_2;
assign	Q0 = JKFF_A;




always@(posedge SYNTHESIZED_WIRE_0)
begin
	JKFF_2 <= ~JKFF_2 & HIGH | JKFF_2 & ~HIGH;
end


always@(posedge SYNTHESIZED_WIRE_1)
begin
	JKFF_3 <= ~JKFF_3 & HIGH | JKFF_3 & ~HIGH;
end


always@(posedge SYNTHESIZED_WIRE_2)
begin
	Q3 <= ~Q3 & HIGH | Q3 & ~HIGH;
end


always@(posedge CLK)
begin
	JKFF_A <= ~JKFF_A & HIGH | JKFF_A & ~HIGH;
end

assign	SYNTHESIZED_WIRE_0 = Mode ^ JKFF_A;

assign	SYNTHESIZED_WIRE_1 = Mode ^ JKFF_2;

assign	SYNTHESIZED_WIRE_2 = Mode ^ JKFF_3;


endmodule
